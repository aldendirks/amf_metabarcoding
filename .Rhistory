# Set paths to import data.
path_amf <-  file.path("data", "pacbio", "seqs") # path to AMF community matrices
path_glbrc <- file.path("data", "glbrc") # path to GLBRC agronomy and soil data
path_lipids <- file.path("data", "lipids") # path to lipids data
# Import GLBRC data, format, and collapse data by experimental unit (plot).
# above ground net primary productivity
df_anpp <- read_csv(file.path(path_glbrc, "588-annual+net+primary+productivity+on+the+marginal+land+experiment.csv"), skip = 31)
# Load libraries
library(tidyverse)
# Load libraries
library(tidyverse); package_version("tidyverse")
# Load libraries
library(tidyverse); package_version(tidyverse)
# Load libraries
library(tidyverse); packageVersion("tidyverse")
# Load libraries
library(tidyverse); packageVersion("tidyverse") # (1.2.1)
# Import GLBRC data, format, and collapse data by experimental unit (plot).
# above ground net primary productivity
df_anpp <- read_csv(file.path(path_glbrc, "588-annual+net+primary+productivity+on+the+marginal+land+experiment.csv"), skip = 31)
View(df_anpp)
df_anpp <- df_anpp[-1,-c(1,3:4,7,8,10:12,15)] # remove unwanted columns and empty first row
df_anpp[,1:4] <- lapply(df_anpp[,1:4], as.factor) # change variable class to factor
df_anpp[,5:6] <- lapply(df_anpp[,5:6], as.numeric) # change variable class to numeric
df_anpp <- df_anpp[grep("Wisconsin", df_anpp$site),] # subset rows containing "Wisconsin" in site
df_anpp <- subset(df_anpp, treatment == "G5"); df_anpp <- df_anpp[,-2] # subset rows belonging to G5 (switchgrass)
colnames(df_anpp)[2] <- "block"
levels(df_anpp$site) <- c("Lake City", "Escanaba", "Lux Arbor", "Hancock", "Rhinelander", "Oregon")
levels(df_anpp$nitrogen) <- c("control", "amended")
df_anpp$site <- factor(df_anpp$site, levels = c("Hancock", "Oregon", "Rhinelander"))
df_anpp$nitrogen <- factor(df_anpp$nitrogen, levels = c("amended", "control"))
df_anpp <- df_anpp %>%
group_by(site, block, nitrogen) %>%
summarise_all(~mean(.))
write.csv(df_anpp, file = file.path(path_glbrc, "anpp.csv"), row.names=FALSE)
# switchgrass height
df_height <- read_csv(file.path(path_glbrc, "592-species+transect+plant+heights.csv"), skip = 25)
View(df_height)
df_height <- df_height[-1,-c(5,9)]
df_height[,2:5] <- lapply(df_height[,2:5], as.factor)
df_height$sample_date <- as.Date(df_height$sample_date)
df_height$height <- as.numeric(df_height$height)
class(df_height$has_lodged)
df_height <- df_height[grep("G5", df_height$plot),]
df_height <- df_height[df_height$sample_date > "2018-01-01",]; df_height <- df_height[,-1]
df_height <- subset(df_height, site == "Hancock" | site == "Oregon" | site == "Rhinelander")
df_height <- subset(df_height, species == "Panicum virgatum L."); df_height <- df_height[,-4]
df_height$block <- gsub("G5-", "", df_height$block)
colnames(df_height)[2:5] <- c("block", "nitrogen", "height", "lodged")
df_height$block <- gsub("G5-", "", df_height$block)
levels(df_height$nitrogen) <- c("control", "amended")
df_height$site <- factor(df_height$site, levels = c("Hancock", "Oregon", "Rhinelander"))
df_height$nitrogen <- factor(df_height$nitrogen, levels = c("amended", "control"))
df_height <- df_height %>%
group_by(site, block, nitrogen) %>%
summarise_all(~mean(.))
df_height$lodged <- as.numeric(df_height$lodged)
View(df_height)
write.csv(df_height, file = file.path(path_glbrc, "height.csv"), row.names=FALSE)
# soil surface cores
df_soil <- read_csv(file.path(path_glbrc, "438-agronomic+soil+chemistry+from+deep+and+surface+soil+cores+marginal+sites.csv"), skip = 36)
View(df_soil)
df_soil <- df_soil[-1,-c(1, 6:8, 15, 19:20)]
df_soil[,c(2:4, 11)] <- lapply(df_soil[,c(2:4, 11)], as.factor)
# soil surface cores
df_soil <- read_csv(file.path(path_glbrc, "438-agronomic+soil+chemistry+from+deep+and+surface+soil+cores+marginal+sites.csv"), skip = 36)
df_soil <- df_soil[-1,-c(1, 6:8, 15, 18:20)]
df_soil[,c(2:4, 11)] <- lapply(df_soil[,c(2:4, 11)], as.factor)
df_soil[,c(5:10, 12)] <- lapply(df_soil[,c(5:10, 12)], as.numeric)
df_soil <- df_soil[grep("Wisconsin", df_soil$site),]
df_soil <- subset(df_soil, sample_date > "2018-01-01"); df_soil <- df_soil[,-1]
df_soil <- subset(df_soil, treatment == "G5"); df_soil <- df_soil[,-2]
colnames(df_soil)[2] <- "block"
colnames(df_soil)[9] <- "nitrogen"
levels(df_soil$site) <- c("Lake City", "Escanaba", "Lux Arbor", "Hancock", "Rhinelander", "Oregon")
levels(df_soil$nitrogen) <- c("control", "amended")
df_soil$site <- factor(df_soil$site, levels = c("Hancock", "Oregon", "Rhinelander"))
df_soil$nitrogen <- factor(df_soil$nitrogen, levels = c("amended", "control"))
df_soil <- df_soil %>%
group_by(site, block, nitrogen) %>%
summarise_all(~mean(.))
View(df_soil)
write.csv(df_soil, file = file.path(path_glbrc, "soil.csv"), row.names=FALSE)
# yield
df_yield <- read_csv(file.path(path_glbrc, "465-dry+matter+yield+marginal+land+experiments.csv"), skip = 29)
View(df_yield)
df_yield <- df_yield[-1,-c(1,6:7,9,12)]
df_yield[,2:5] <- lapply(df_yield[,2:5], as.factor)
df_yield[,6:7] <- lapply(df_yield[,6:7], as.numeric)
df_yield <- df_yield[grep("Wisconsin", df_yield$site),]
df_yield <- subset(df_yield, harvest_date > "2018-01-01"); df_yield <- df_yield[,-1]
df_yield <- subset(df_yield, treatment == "G5"); df_yield <- df_yield[,-2]
colnames(df_yield)[2:5] <- c("block", "nitrogen", "yield", "moisture")
levels(df_yield$site) <- c("Lake City", "Escanaba", "Lux Arbor", "Hancock", "Rhinelander", "Oregon")
levels(df_yield$nitrogen) <- c("control", "amended")
df_yield$site <- factor(df_yield$site, levels = c("Hancock", "Oregon", "Rhinelander"))
df_yield$nitrogen <- factor(df_yield$nitrogen, levels = c("amended", "control"))
df_yield <- df_yield %>%
group_by(site, block, nitrogen) %>%
summarise_all(~mean(.))
write.csv(df_yield, file = file.path(path_glbrc, "yield.csv"), row.names=FALSE)
path_lipids <- file.path("data", "lipids") # path to lipids data
# Import lipid data, format, and collapse data by experimental unit (plot).
df_lipids <- read_csv(file.path(path_lipids, "lipids_guilds_and_indicators.csv"))
View(df_lipids)
df_lipids <- df_lipids[,-c(3, 15:48)]
# Import lipid data, format, and collapse data by experimental unit (plot).
df_lipids <- read_csv(file.path(path_lipids, "lipids_guilds_and_indicators.csv"))
df_lipids <- df_lipids[,-c(3, 15:48)]
View(df_lipids)
# Import lipid data, format, and collapse data by experimental unit (plot).
df_lipids <- read_csv(file.path(path_lipids, "lipids_guilds_and_indicators.csv"))
View(df_lipids)
df_lipids <- df_lipids[,-c(3, 15:33)]
df_lipids[,1:3] <- lapply(df_lipids[,1:3], as.factor)
df_lipids <- df_lipids %>%
group_by(site, block, nitrogen) %>%
summarise_all(~sum(.))
# Import lipid data, format, and collapse data by experimental unit (plot).
df_lipids <- read_csv(file.path(path_lipids, "lipids_guilds_and_indicators.csv"))
df_lipids <- df_lipids[,-c(3, 15:33)]
df_lipids[,1:3] <- lapply(df_lipids[,1:3], as.factor)
df_lipids <- df_lipids %>%
group_by(site, block, nitrogen) %>%
summarise_all(~mean(.))
write.csv(df_lipids, file = file.path(path_lipids, "lipids.csv"), row.names = FALSE)
View(df_yield)
View(df_anpp)
# Load libraries
library(tidyverse); packageVersion("tidyverse") # (1.2.1)
# Set paths to import data.
path_glbrc <- file.path("data", "glbrc") # path to GLBRC agronomy and soil data
path_lipids <- file.path("data", "lipids") # path to lipids data
path_seqs <-  file.path("data", "seqs", "cleaned") # path to seqeunce data
# Import site x "species" matrices, format, and collapse by experimental unit.
df_asv <- read.table(file.path(path_seqs, "ASVs_counts.tsv"), header = TRUE, row.names = 1, check.names = FALSE, sep = "\t")
df_sample_info <- read.table(file.path(path_seqs, "sample_info.csv"), header = TRUE, row.names = 3, check.names = FALSE, sep = ",")
df_sample_info <- read.table(file.path(path_seqs, "sample_info.csv"), header = TRUE, check.names = FALSE, sep = ",")
View(df_sample_info)
View(df_asv)
df_tax <- read.table(file.path(path_amf, "ASVs_taxonomy.tsv"), header = TRUE, row.names = 1, check.names = FALSE, sep = "\t")
df_tax <- read.table(file.path(path_seqs, "ASVs_taxonomy.tsv"), header = TRUE, row.names = 1, check.names = FALSE, sep = "\t")
df_otu_des <- read.table(file.path(path_seqs, "OTUs_des.txt"), header = FALSE, row.names = 1, check.names = FALSE, sep ="", col.names = paste0("V",seq_len(136)), fill = TRUE)
View(df_otu_des)
# Import site x "species" matrices, format, and collapse by experimental unit.
# load data
df_asv <- read.table(file.path(path_seqs, "ASVs_counts.tsv"), header = TRUE, row.names = 1, check.names = FALSE, sep = "\t")
df_otu_des <- read.table(file.path(path_seqs, "OTUs_des.txt"), header = FALSE, row.names = 1, check.names = FALSE, sep ="", col.names = paste0("V",seq_len(136)), fill = TRUE)
df_sample_info <- read.table(file.path(path_seqs, "sample_info.csv"), header = TRUE, check.names = FALSE, sep = ",")
df_tax <- read.table(file.path(path_seqs, "ASVs_taxonomy.tsv"), header = TRUE, row.names = 1, check.names = FALSE, sep = "\t")
fas_asv <- readDNAStringSet(file.path(path_seqs, "ASVs.fasta"))
# Load libraries
library(Biostrings); packageVersion("Biostrings")
fas_asv <- readDNAStringSet(file.path(path_seqs, "ASVs.fasta"))
df_asv_rm <- read.table(file.path(path_amf, "ASVs_remove.csv"), header = TRUE, check.names = FALSE, sep = ",")
df_asv_rm <- read.table(file.path(path_seqs, "ASVs_remove.csv"), header = TRUE, check.names = FALSE, sep = ",")
View(df_asv_rm)
df_asv_rm <- read.table(file.path(path_seqs, "ASVs_remove.csv"), header = TRUE, check.names = FALSE, sep = ",")
View(df_asv_rm)
# Import site x "species" matrices, format, and collapse by experimental unit.
# load data
df_asv <- read.table(file.path(path_seqs, "ASVs_counts.tsv"), header = TRUE, row.names = 1, check.names = FALSE, sep = "\t")
df_asv_rm <- read.table(file.path(path_seqs, "ASVs_remove.csv"), header = TRUE, check.names = FALSE, sep = ",")
df_otu_des <- read.table(file.path(path_seqs, "OTUs_des.txt"), header = FALSE, row.names = 1, check.names = FALSE, sep ="", col.names = paste0("V",seq_len(136)), fill = TRUE)
df_otu_des <- read.table(file.path(path_seqs, "OTUs_des.txt"), header = FALSE, row.names = 1, check.names = FALSE, sep ="", col.names = paste0("V",seq_len(136)), fill = TRUE)
df_sample_info <- read.table(file.path(path_seqs, "sample_info.csv"), header = TRUE, check.names = FALSE, sep = ",")
df_tax <- read.table(file.path(path_seqs, "ASVs_taxonomy.tsv"), header = TRUE, row.names = 1, check.names = FALSE, sep = "\t")
fas_asv <- readDNAStringSet(file.path(path_seqs, "ASVs_filt.fasta"))
# format ASV community composition matrix
df_asv <- df_asv[ !(row.names(df_asv) %in% df_asv_rm[,1]),]
df_asv <- t(df_asv) # transpose matrix so that sites are rows and ASVS are columns
# format OTU community composition matrix
# format family community composition matrix
# format family community composition matrix
df_fam <- df_asv
View(df_fam)
View(df_tax)
citation("dada1")
citation("dada2")
packageVersion("dada2")
citation("DECIPHER")
packageVersion("DECIPHER")
packageVersion("phangorn")
citation("phangorn")
